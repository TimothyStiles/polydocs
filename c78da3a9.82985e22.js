(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{128:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(2),i=t(6),o=(t(0),t(136)),a={id:"cli-converting",title:"Converting Sequence Files"},c={id:"cli-converting",isDocsHomePage:!1,title:"Converting Sequence Files",description:"One of Poly's surprisingly super useful features is being able to convert gbk and gff files to JSON and back again.",source:"@site/docs/cli-converting.md",permalink:"/polydocs/docs/cli-converting",editUrl:"https://github.com/timothystiles/poly/edit/prime/docs/cli-converting.md",sidebar:"someSidebar",previous:{title:"Installing Poly",permalink:"/polydocs/docs/"},next:{title:"Hashing Sequences",permalink:"/polydocs/docs/cli-hashing"}},l=[{value:"Examples",id:"examples",children:[{value:"Converting files to JSON",id:"converting-files-to-json",children:[]},{value:"Converting pipes to JSON",id:"converting-pipes-to-json",children:[]}]},{value:"More Info",id:"more-info",children:[]}],s={rightToc:l};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"One of Poly's surprisingly super useful features is being able to convert gbk and gff files to JSON and back again."),Object(o.b)("p",null,"I know this sounds trivial but parsing and writing these legacy files isn't that simple and not many languages provide libraries for it. Our genbank parser is 500+ lines long and we're still adding to it!"),Object(o.b)("h2",{id:"examples"},"Examples"),Object(o.b)("h3",{id:"converting-files-to-json"},"Converting files to JSON"),Object(o.b)("p",null,"If you just want to turn the ugly gff and genbank files in a directory into JSON files so that you can push them to a database or use them with any language of your choice without having to write an annoying parser just run this inside any given directory."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"poly convert -o json *.gbk *.gb *.gff\n")),Object(o.b)("p",null,"This will find every .gbk .gb and .gff file, parse them, and then write out a JSON file with a corresponding name."),Object(o.b)("h3",{id:"converting-pipes-to-json"},"Converting pipes to JSON"),Object(o.b)("p",null,"Here's how you can pipe to standard input and then redirect to a new json file."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"cat bsub.gbk | poly c -i gbk -o json > bsub.json\n")),Object(o.b)("p",null,"Notice the ",Object(o.b)("inlineCode",{parentName:"p"},"-i")," flag that specifies ",Object(o.b)("inlineCode",{parentName:"p"},"gbk")," input and the ",Object(o.b)("inlineCode",{parentName:"p"},"-o")," flag that specifies ",Object(o.b)("inlineCode",{parentName:"p"},"json")," output."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"poly convert")," output always defauts to ",Object(o.b)("inlineCode",{parentName:"p"},"json")," and can infer input from file paths but in the case of ",Object(o.b)("strong",{parentName:"p"},"piping input must always be specified using the ",Object(o.b)("inlineCode",{parentName:"strong"},"-i")," flag"),"."),Object(o.b)("h2",{id:"more-info"},"More Info"),Object(o.b)("p",null,"For more info about ",Object(o.b)("inlineCode",{parentName:"p"},"poly convert")," and its usage try running ",Object(o.b)("inlineCode",{parentName:"p"},"poly help convert")," or ",Object(o.b)("inlineCode",{parentName:"p"},"poly help c")," from your command line."))}p.isMDXComponent=!0},136:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),p=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=p(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},f=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(t),f=r,d=u["".concat(a,".").concat(f)]||u[f]||b[f]||o;return t?i.a.createElement(d,c(c({ref:n},s),{},{components:t})):i.a.createElement(d,c({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=f;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<o;s++)a[s]=t[s];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);